def classify_prompt(question) -> str:
    classify_prompt = """
    请问“{}”是属于下面哪个类别的问题?
    A: 公司基本信息,包含股票简称, 公司名称, 外文名称, 法定代表人, 注册地址, 办公地址, 公司网址网站, 电子信箱等.
    B: 公司员工信息,包含员工人数, 员工专业, 员工类别, 员工教育程度等.
    C: 财务报表相关内容, 包含资产负债表, 现金流量表, 利润表 中存在的字段, 包括费用, 资产，金额，收入等.
    D: 计算题,无法从年报中直接获得,需要根据计算公式获得, 包括增长率, 率, 比率, 比重,占比等. 
    E: 统计题，需要从题目获取检索条件，在数据集/数据库中进行检索、过滤、排序后获得结果.        
    F: 开放性问题,包括介绍情况,介绍方法,分析情况,分析影响,什么是XXX.
    你只需要回答字母编号, 不要回答字母编号及选项文本外的其他内容.
    """.format(
        question
    )
    return classify_prompt


def keywords_prompt(question) -> str:
    question_prompt = """
# 任务
请根据用户输入,为我从以下句子中提取最多3个关键词, 这些关键词是句子中最重要, 最能概括句子主题的词汇, 需要作为报表数据库查询的关键字段名被使用.

# 示例
- 输入: 请根据江化微2019年的年报,简要介绍报告期内公司主要销售客户的客户集中度情况,并结合同行业情况进行分析。
  输出: 主要销售客户集中度情况
- 输入: 能否根据2020年金宇生物技术股份有限公司的年报,给我简要介绍一下报告期内公司的社会责任工作情况？
  输出: 社会责任工作情况

# 输出格式
以markdown code block形式, 将关键词按逗号分割的形式输出, 例如:
```关键词1,关键词2,关键词3```

# 用户输入：
{question}
"""
    keywords_prompt = question_prompt.format(question=question)
    return keywords_prompt


def nl2sql_prompt(question) -> str:
    nl2sql_prompt = """
# 任务
你是一名Mysql数据库开发人员, 你精通Mysql数据库的sql语句编写, 你需要根据已知的表名、字段名和用户输入来编写sql代码.

# 上下文
## 已知表名
- company_table

## 已知字段名
- 公司全称
- 年份
- 合计
- 利息收入
- 电子信箱
- 研发费用
- 其他应付款
- 货币资金
- 应收账款
- 其他应收款
- 存货
- 在建工程
- 无形资产
- 其他非流动资产
- 总资产
- 应付账款
- 应付职工薪酬
- 应交税费
- 经营活动现金流入小计
- 支付的各项税费
- 经营活动现金流出小计
- 投资活动现金流出小计
- 筹资活动现金流出小计
- 营业总收入
- 营业收入
- 营业总成本
- 税金及附加
- 销售费用
- 管理费用
- 财务费用
- 营业利润
- 营业外收入
- 营业外支出
- 所得税费用
- 预付款项
- 其他流动资产
- 固定资产
- 非流动资产
- 流动负债
- 非流动负债
- 总负债
- 未分配利润
- 营业成本
- 其他收益
- 净利润
- 基本每股收益
- 流动资产
- 资本公积
- 投资活动现金流入小计
- 筹资活动产生的现金流量净额
- 盈余公积
- 投资活动产生的现金流量净额
- 综合收益总额
- 所有者权益合计
- 销售商品、提供劳务收到的现金
- 购买商品、接受劳务支付的现金
- 经营活动产生的现金流量净额
- 期末现金及现金等价物余额
- 现金及现金等价物净增加额
- 归属于母公司所有者权益合计
- 期初现金及现金等价物余额
- 负债和所有者权益总计
- 分配股利、利润或偿付利息支付的现金
- 支付其他与经营活动有关的现金
- 利润总额
- 销售人员
- 递延所得税资产
- 收到其他与经营活动有关的现金
- 归属于母公司所有者的综合收益总额
- 财务人员
- 持续经营净利润
- 筹资活动现金流入小计
- 技术人员
- 办公地址
- 购建固定资产、无形资产和其他长期资产支付的现金
- 投资收益
- 行政人员
- 稀释每股收益
- 生产人员
- 处置固定资产、无形资产和其他长期资产收回的现金净额
- 注册地址
- 中文简称
- 法定代表人
- 办公地址邮政编码
- 中文名称
- 信用减值损失
- 外文名称
- 利息费用
- 递延收益
- 资产减值损失
- 支付其他与筹资活动有关的现金
- 母公司及主要子公司需承担费用的离退休职工人数
- 资产处置收益
- 长期待摊费用
- 取得投资收益收到的现金
- 收到的税费返还
- 偿还债务支付的现金
- 取得借款收到的现金
- 投资支付的现金
- 汇率变动对现金及现金等价物的影响
- 母公司在职员工的数量
- 职工总人数
- 主要子公司在职员工的数量
- 归属于母公司股东的净利润
- 短期借款
- 收回投资收到的现金
- 应收票据
- 递延所得税负债
- 少数股东损益
- 少数股东权益
- 归属于少数股东的综合收益总额
- 吸收投资收到的现金
- 应付票据
- 注册地址邮政编码
- 一年内到期的非流动负债
- 其他流动负债
- 预收款项
- 应收款项融资
- 合同负债
- 交易性金融资产
- 其他综合收益
- 其他综合收益的税后净额
- 归属母公司所有者的其他综合收益的税后净额
- 长期股权投资
- 对联营企业和合营企业的投资收益
- 本科
- 公允价值变动收益
- 长期借款
- 外文名称缩写
- 将重分类进损益的其他综合收益
- 收到其他与投资活动有关的现金
- 收到其他与筹资活动有关的现金
- 商誉
- 支付其他与投资活动有关的现金
- 外币财务报表折算差额
- 实收资本
- 支付给职工及为职工支付的现金
- 研发人员数量占公司总人数的比例（%）
- 网址
- 大专
- 股本
- 当期领取薪酬员工总人数
- 股票简称
- 股票代码
- 研发人员数量
- 研发人员数量占比
- 国际互联网网址
- 公司研发人员的数量
- 支付给职工以及为职工支付的现金
- 投资性房地产
- 其他权益工具投资
- 子公司吸收少数股东投资收到的现金
- 长期应付款
- 库存股
- 预计负债
- 应付利息
- 子公司支付给少数股东的股利、利润
- 取得子公司及其他营业单位支付的现金净额
- 使用权资产
- 租赁负债
- 其他非流动金融资产
- 不能重分类进损益的其他综合收益
- 应付股利
- 专项储备
- 其他权益工具投资公允价值变动
- 归属于少数股东的其他综合收益的税后净额
- 硕士及以上
- 处置子公司及其他营业单位收到的现金净额
- 注册地址历史变更情况
- 合同资产
- 开发支出
- 长期应收款
- 硕士
- 应收利息


# 要求
- sql代码中的字段名必须是上下文中的已知字段名,不得新增字段名
- 如果用户输入中不含已知字段名，从已知字段名中找到最相似的

# 示例
- 输入:在上海注册的上市公司中,2019年谁的总负债最高?金额是?
  输出: ```select 公司全称, 总负债 from company_table where 注册地址 LIKE '%上海%' 'and 年份 = '2019' order by 总负债 desc limit 1```
- 输入:2019年总负债最高的十家公司分别是?
  输出: ```select 公司全称 from company_table where 年份 = '2019' order by 总负债 desc limit 10```
- 输入:在上海注册的上市公司中,2019年总负债最多的十家公司分别是,总负债金额分别是?
  输出: ```select 公司全称, 总负债 from company_table where 注册地址 LIKE '%上海%' and 年份 = '2019' order by 总负债 desc limit 10```
- 输入:注册地点在深圳市的公司中,2021年总负债超过了五千万的公司有几家?
  输出: ```select count(1) from company_table where 年份 = '2021' and 注册地址 like '%深圳市%' and 总负债 is not null and 总负债 > 50000000 ```
- 输入:注册地点在四川的公司中,2019年平均的利润总额是多少?
  输出:```select avg(利润总额) from company_table where 年份 = '2019' and 注册地址 like '%四川%' and 利润总额 is not null```
- 输入:2021年注册地在上海的上市公司中,一共有多少销售人员?
  输出: ```select sum(销售人员) from company_table where 年份 = '2021' and 注册地址 like '%上海%' and 销售人员 is not null```
- 输入: 2021年货币资金第5高的上市公司为？
  输出: SELECT 公司全称 FROM company_table WHERE 年份 = '2021' ORDER BY 货币资金 DESC LIMIT 1 OFFSET 4
- 输入: 2019年总负债第三高的上市公司为？
  输出: SELECT 总负债 FROM company_table WHERE 年份 = '2019' ORDER BY 总负债 DESC LIMIT 1 OFFSET 2

# 输出格式
以markdown的code block格式输出sql代码,例如:
```select sum(销售人员) from company_table where 年份 = '2021' and 注册地址 like '%上海%' and 销售人员 is not null```

# 用户输入
{question}
""".format(
        question=question
    )
    return nl2sql_prompt


def type1_prompt(question, company, abbr, years):
    comp = company if company in question else abbr
    if len(years) > 1:
        added_question = ""
        for i, year in enumerate(years):
            added_question += "{}. {}年的是?\n".format(i + 2, year)
        prompt = """
{{}}

******************************
请回答下面的问题:
1. {{}}
{}""".format(
            added_question
        )

    else:
        answer_format = "{}年{}的XXXX是XXXX".format(years[0], comp)
        prompt = """
{{}}

请回答问题: {{}}
注意你的回答应该按照以下要求:
1. 你回答的格式应该是:{}。
2. 你只需要回答问题相关的内容, 不要回答无关内容。
3. 你不需要进行计算。
4. 你的回答只能来源于提供的资料。""" "".format(
            answer_format
        )

    return prompt


def keyword_extraction_prompt_type3(question):
    return '''
这是文字提取器，你要从用户输入的文本中提取关键词
关键词是指：问题最终指向的词语，通常是名词或句子的宾语，通常出现在公司名称或时间状语后面
如：净利润、社会责任工作、企业名称、固定资产、外文名称、注册地址、财务费用、长期借款、短期借款、资产及负债、收回投资收到的现金、净利润率、企业研发经费与利润比值、企业研发经费与营业收入比值、研发人员占职工人数比例、企业硕士及以上人员占职工人数比例、企业研发经费占费用比例、收回投资所收到的现金、关键审计事项、法人代表、负债总金额、总负债、无。对象可以有多个。没有写“无”。
输出完毕后结束，不要生成新的用户输入，不要新增内容


示例模板：
"""
用户输入：能否根据的年报，给我简要介绍一下报告期内公司的社会责任工作情况？

关键词1:社会责任工作

用户输入：其他非流动金融资产第十一高的上市公司是哪家？

关键词1:其他非流动金融资产


用户输入：研发人员占职工人数比例是多少?请。？

关键词1:研发人员占职工人数比例


用户输入：办公地址是什么?

关键词1:办公地址


用户输入：法定代表人对比是否相同?。

关键词1:法定代表人


用户输入：法定代表人与上年相比相同吗？

关键词1:法定代表人


用户输入：根据的年报，请简要介绍报告期内公司主要销售客户的客户集中度如何？请结合同行业情况简要分析。?

关键词1:客户集中度

用户输入：在的现金比率是多少？请保留至小数点后两位。

关键词1:现金比率

用户输入：研发费用和财务费用分别是多少元?

关键词1:研发费用
关键词2:财务费用

"""

请根据以下文本，严格按照示例模版格式输出内容。
用户输入：{}
'''.format(
        question
    )


def type3_prompt(background, question):
    return """
    你需要阅读理解年报的片段来真实详细完整的回答用户的提问。
    下面是年报内容格式的一些说明:
    1. 片段由标题和正文内容组成。
    1. 片段中的标题通常以中文数字如一二三四五或阿拉伯数字12345开始。
    2. 片段中的表格采用制表符'\t'分隔。
    3. "√适用"表示该项内容公司存在该事项, "√不适用"表示公司不存在该事项。
    4. "√是"表示该项是或者有, "√否"表示该项不是或者没有。

    {}
    ******************************
    问: {}
    """.format(
        background, question
    )


def general_qa_prompt(ctx, question):
    prompt = f"""
    # 任务
    请根据提供的上下文回答我的问题

    # 我的问题
    {question}

    # 上下文
    {ctx}

    # 回答要求
    - 你只需要回答问题相关的内容, 不要回答无关内容。
    - 你的回答只能来源于提供的上下文。
    - 在回答回答需要复述问题。
    """

    return prompt


def single_question_prompt(ori_question, company, year, background, step_question):
    if "人数" in ori_question or "数量" in ori_question or "人员" in ori_question:
        unit = "人"
    else:
        unit = "元"

    prompt = f"""
    # 背景
    {background}
    # 请回答问题
    {step_question}

    # 回复要求
    1. 你回答的格式应该是:{company}{year}年的XXXX是XXXX{unit}。
    2. 你只需要回答问题相关的内容, 不要回答无关内容。
    3. 你不需要进行计算。
    4. 你的回答只能来源于提供的资料。
    4. 回答之前需要复述一下问题。
    """

    return prompt


def sql_correction_prompt(keywords, sql, error_msg):
    return """你是一名mysql数据库开发人员，精通SQL编写，请根据错误信息对sql进行修复
已知表名：company_table
已知字段名：{}
已知sql：
···sql
{}
···
已知错误信息：“{}”
""".format(
        keywords, sql, error_msg
    )


def find_synonyms_prompt(word_list, word):
    return '''
# 任务
你是一个同义词查询字典，从已知词语列表中，查找与查询词语最相近的一个词语

# 已知词语列表：
{}

# 要求
- 要求只输出语义最相近的1个词
- 词语必须存在于已知的词语列表，不要生成新的用户输入，不要新增内容

# 示例：
"""
- 输入: 总负债
  输出：负债总计

- 输入：资产总额
  输出：总资产

- 输入：其余资产
  输出：其它流动资产

- 输入：公司注册地址
  输出：注册地址

- 输入：利息收益
  输出：利息收入

# 输出格式
只需要输出同义词本身，无需任何前缀后缀
"""

# 用户输入
{}
'''.format(
        word_list, word
    )
